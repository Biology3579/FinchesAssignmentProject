# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
#| label: clean-&-save-data
# Source the cleaning function
source(here("functions", "cleaning.R"))
# Apply cleaning function
finches_clean <- cleaning_data(finches_raw)
# Save the clean data
write_csv(finches_clean, here("data", "finches_clean.csv"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_exploratory_boxplot)
))
exploratory_boxplot # Show plot
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_exploratory_boxplot)
))
exploratory_boxplot # Show plot
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_exploratory_boxplot)
))
exploratory_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
year_comparison = "Model",
term_label = "1976 vs 1978",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Display the table
print(summary_table)
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
year_comparison = "Model",
term_label = "1976 vs 1978",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
year_comparison = "Model",
term_label = "1976 vs 1978",
effect_size_label = "Estimate"
p_value_label = "p-value",
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
year_comparison = "Model",
term_label = "1976 vs 1978",
effect_size_label = "Estimate",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Display the table
print(summary_table)
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
term_label = "1976 vs 1978",
effect_size_label = "Estimate",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Display the table
print(summary_table)
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
term_label = "1976 vs 1978",
effect_size_label = "Estimate",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Source the plotting functions
source(here("functions", "plotting.R"))
# Source the plotting functions
source(here("functions", "plotting.R"))
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
term_label = "1976 vs 1978",
effect_size_label = "Estimate",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(lm_model,
term_label = "1976 vs 1978",
effect_size_label = "Estimate",
p_value_label = "p-value",
conf_lower_label = "Lower CI",
conf_upper_label = "Upper CI")
# Display the table
print(summary_table)
#| label: renv-restore
renv::restore()
#| label: packages
#Load necessary packages
library(Sleuth3)
library(janitor)
library(here)
library(car)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(svglite)
library(broom)
#| label: load-&-save-data
#Load the raw data and save it
write.csv(case0201, here("data", "finches_raw.csv"))    #To write data to csv
finches_raw <- read.csv(here("data","finches_raw.csv")) #Load data
# Quick look at the case0201 dataset
head(finches_raw) # Outputs first few rows of the dataset
#| label: clean-&-save-data
# Source the cleaning function
source(here("functions", "cleaning.R"))
# Apply cleaning function
finches_clean <- cleaning_data(finches_raw)
# Save the clean data
write_csv(finches_clean, here("data", "finches_clean.csv"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,                           # Data
"figures/exploratory_boxplot.svg",       # Filename (path/name)
size = 15,                               # Sizing
scaling = 1,                             # Scaling
plot_function = plot_exploratory_boxplot)# Plot function
))
exploratory_boxplot # Show plot
#| label: linear-model-analysis
# Fit a linear model
lm_model <- lm(beak_depth_mm ~ year, data = finches_clean)
#| label: diagnostic-plots
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
diagnostic_plots <- plot_diagnostics(lm_model)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_diagnostics)
))
#| label: diagnostic-plots
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
diagnostic_plots <- plot_diagnostics(lm_model)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_diagnostics)
))
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
#| label: levene-test
# Perform Levene's test
levene_test <- leveneTest(linear_model)
#| label: load-&-save-data
#Load the raw data and save it
write.csv(case0201, here("data", "finches_raw.csv"))    #To write data to csv
finches_raw <- read.csv(here("data","finches_raw.csv")) #Load data
# Quick look at the case0201 dataset
head(finches_raw) # Outputs first few rows of the dataset
#| label: clean-&-save-data
# Source the cleaning function
source(here("functions", "cleaning.R"))
# Apply cleaning function
finches_clean <- cleaning_data(finches_raw)
# Save the clean data
write_csv(finches_clean, here("data", "finches_clean.csv"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,                           # Data
"figures/exploratory_boxplot.svg",       # Filename (and path: folder/name)
size = 15,                               # Sizing
scaling = 1,                             # Scaling
plot_function = plot_exploratory_boxplot)# Plot function
))
exploratory_boxplot # Show plot
#| label: linear-model-analysis
# Fit a linear model
linear_model <- lm(beak_depth_mm ~ year, data = finches_clean)
#| label: diagnostic-plots
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
diagnostic_plots <- plot_diagnostics(linear_model)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_diagnostics)
))
#| label: levene-test
# Perform Levene's test
levene_test <- leveneTest(linear_model)
levene_test # Display results
#| label: shapiro-wilk-test
# Perform the Shapiro-Wilk test
shapiro_test <- shapiro.test(resid(linear_model))
shapiro_test # Display results
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(linear_model,                   #Model
term_label = "1976 vs 1978",    #...
effect_size_label = "Estimate", #...
p_value_label = "p-value",      #...
conf_lower_label = "Lower CI",  #...
conf_upper_label = "Upper CI")  #...
# Display the table
print(summary_table)
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
renv::init()
#| label: renv-restore
renv::restore()
#| label: packages
# Source library loading fucntion
source(here::here("functions", "libraries.R"))
# Load necessary libraries
load_libraries()
#| label: packages
# Source library loading fucntion
source(here::here("functions", "libraries.R"))
# Load necessary libraries
load_libraries()
#| label: packages
# Source library loading fucntion
source(here::here("functions", "libraries.R"))
# Load necessary libraries
load_libraries()
#| label: load-&-save-data
#Load the raw data and save it
write.csv(case0201, here("data", "finches_raw.csv"))    #To write data to csv
finches_raw <- read.csv(here("data","finches_raw.csv")) #Load data
#| label: raw-data-view
# Quick look at the case0201 dataset
head(finches_raw) # Outputs first few rows of the dataset
#| label: clean-&-save-data
# Source the cleaning function
source(here("functions", "cleaning.R"))
# Apply cleaning function
finches_clean <- cleaning_data(finches_raw)
# Save the clean data
write_csv(finches_clean, here("data", "finches_clean.csv"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
exploratory_boxplot <- plot_exploratory_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,                           # Data
"figures/exploratory_boxplot.svg",       # Filename (and path: folder/name)
size = 15,                               # Sizing
scaling = 1,                             # Scaling
plot_function = plot_exploratory_boxplot)# Plot function
))
exploratory_boxplot # Show plot
#| label: linear-model-analysis
# Fit a linear model
linear_model <- lm(beak_depth_mm ~ year, data = finches_clean)
#| label: diagnostic-plots
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
diagnostic_plots <- plot_diagnostics(linear_model)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/exploratory_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_diagnostics)
))
#| label: levene-test
# Perform Levene's test
levene_test <- leveneTest(linear_model)
levene_test # Display results
#| label: shapiro-wilk-test
# Perform the Shapiro-Wilk test
shapiro_test <- shapiro.test(resid(linear_model))
shapiro_test # Display results
#| label: generate-summary-table
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot fucntion
summary_table <- generate_summary_table(
linear_model,                   # The linear model to summarize
term_label = "1976 vs 1978",    # Label for the term being compared (years 1976 and 1978)
effect_size_label = "Estimate", # Custom label for effect size (e.g., the regression coefficient)
p_value_label = "p-value",      # Custom label for the p-value from the model output
conf_lower_label = "Lower CI",  # Custom label for the lower bound of the confidence interval
conf_upper_label = "Upper CI"   # Custom label for the upper bound of the confidence interval
)
# Display the table
print(summary_table)
#| label: plot-results-boxplot
# Source the plotting functions
source(here("functions", "plotting.R"))
# Apply plot function
results_boxplot <- plot_results_boxplot(finches_clean)
# Suppress the null device output
invisible(capture.output(
# Apply save function
save_plot_svg(
finches_clean,
"figures/results_boxplot.svg",
size = 15,
scaling = 1,
plot_function = plot_results_boxplot)
))
results_boxplot # Show plot
renv::snapshot()
