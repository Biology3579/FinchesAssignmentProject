title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = c("(Intercept)" = "1978 (Baseline)", "factor(year)1976" = "1976 (Difference)")) +  # Labeling the year comparison
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove the legend
) +
# Adjust x-axis for better visualization of the estimate and confidence interval
scale_x_continuous(limits = c(conf_int_lower - 0.5, conf_int_upper + 0.5), breaks = seq(conf_int_lower, conf_int_upper, by = 0.2))
# Run the t-test (with 1978 as the reference level for 'year')
finches_clean$year <- relevel(finches_clean$year, ref = "1978")
t_test_result <- t.test(beak_depth_mm ~ factor(year), data = finches_clean)
# Extract necessary information from t-test
mean_diff <- t_test_result$estimate[2] - t_test_result$estimate[1]  # Difference in means
conf_int_lower <- t_test_result$conf.int[1]  # Lower bound of confidence interval
conf_int_upper <- t_test_result$conf.int[2]  # Upper bound of confidence interval
# Fit the linear model based on t-test results (since we're using year as the factor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Plot the dotwhisker plot with the mean difference and confidence intervals
library(dotwhisker)
dwplot(lm_beak) +
theme_minimal() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = c("(Intercept)" = "1978 (Baseline)", "factor(year)1976" = "1976 (Difference)")) +  # Labeling the year comparison
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove the legend
) +
# Adjust x-axis for better visualization of the estimate and confidence interval
scale_x_continuous(limits = c(conf_int_lower - 0.5, conf_int_upper + 0.5), breaks = seq(conf_int_lower, conf_int_upper, by = 0.2))
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1978")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_minimal() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = c("(Intercept)" = "1978 (Baseline)", "factor(year)1976" = "1976 (Difference)")) +  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_minimal() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = c("(Intercept)" = "1978 (Baseline)", "factor(year)1976" = "1976 (Difference)")) +  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = c("(Intercept)" = "1978 (Baseline)", "factor(year)1976" = "1976 (Difference)")) +  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = "none") +  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = FALSE)+  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1978 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = element_blank())+  # Correct y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(-1, 1),  # Adjust range of x-axis to better visualize the confidence interval and estimates
breaks = seq(-1, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1976 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = element_blank()) +  # Remove y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
axis.text.y = element_blank(),   # Remove y-axis text
axis.ticks.y = element_blank(),  # Remove y-axis ticks
legend.position = "none"  # Remove legend
) +
scale_x_continuous(
limits = c(0, 1),  # Adjust x-axis range to start from 0
breaks = seq(0, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1976 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = element_blank()) +  # Remove y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
axis.text.y = element_blank(),   # Remove y-axis text
axis.ticks.y = element_blank(),  # Remove y-axis ticks
legend.position = "none",        # Remove legend
panel.border = element_blank()   # Remove the vertical line (panel border)
) +
scale_x_continuous(
limits = c(0, 1),  # Adjust x-axis range to start from 0
breaks = seq(0, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
# Relevel year to make 1976 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = element_blank()) +  # Remove y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
axis.text.y = element_blank(),   # Remove y-axis text
axis.ticks.y = element_blank(),  # Remove y-axis ticks
legend.position = "none",        # Remove legend
panel.border = element_blank()   # Remove the vertical line (panel border)
) +
scale_x_continuous(
limits = c(0, 1),  # Adjust x-axis range to start from 0
breaks = seq(0, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
library(see)
ggplot(finches_clean, aes(x = year, y = beak_depth_mm, fill = year)) +
geom_violindot(fill_dots = "black") +
theme_modern() +
scale_fill_material_d()
ggplot(finches_clean, aes(x = beak_depth_mm, color = year, fill = year)) +
geom_density(alpha = 0.5)
# Define your custom color palette (from earlier in the document)
year_color_map <- c(
"1976" = "#E7B800",  # Yellow for 1976 (before the drought)
"1978" = "#FC4E07"   # Orange for 1978 (after the drought)
)
# Create the plot using custom colors
library(see)
ggplot(finches_clean, aes(x = year, y = beak_depth_mm, fill = year)) +
geom_violin() +  # geom_violindot() may not be correct, assuming you mean geom_violin()
theme_modern() +
scale_fill_manual(values = year_color_map)  # Apply custom color palette
library(see)
ggplot(finches_clean, aes(x = year, y = beak_depth_mm, fill = year)) +
geom_violindot(fill_dots = "black") +
theme_modern() +
scale_fill_material_d()
#| label: setup
#| include: false #runs code but doenst dispaly it
#| warning: false # does not dispaly warnings - put as fucntion after code is clean
renv::init() #renv file for reproducibility
# Install Packages
#| label: setup
#| include: false #runs code but doenst dispaly it
#| warning: false # does not dispaly warnings - put as fucntion after code is clean
renv::init() #renv file for reproducibility
# Install Packages
#| label: setup
#| include: false #runs code but doenst dispaly it
#| warning: false # does not dispaly warnings - put as fucntion after code is clean
renv::init() #renv file for reproducibility
# Install Packages
#| label: setup
#| include: false #runs code but doenst dispaly it
#| warning: false # does not dispaly warnings - put as fucntion after code is clean
renv::init() #renv file for reproducibility
# Install Packages
install.packages("Sleuth3") # for the data
#| label: setup
#| include: false #runs code but doenst dispaly it
#| warning: false # does not dispaly warnings - put as fucntion after code is clean
renv::init() #renv file for reproducibility
# Install Packages
install.packages("Sleuth3") # for the data
install.packages("Sleuth3") # for the data
install.packages("dplyr") # for the data
install.packages("here") # for the data
install.packages("tidyverse") # for the data
install.packages("janitor")
install.packages("reshape2")
install.packages("dotwhisker")
install.packages("ggpubr")
install.packages("devtools")
install.packages("see")
#| label: diagnostic-plots
# Extract group means
mean_1976 <- mean(finches_clean$beak_depth_mm[finches_clean$year == "1976"])
library(Sleuth3)
library(janitor)
library(here)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(reshape2)
library(see)
#| label: loading-data
# To write data to csv
write.csv(case0201, here("data", "finches_raw.csv"))
# Load data
finches_raw <- read.csv(here("data","finches_raw.csv"))
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
summary(finches_raw)# summary statistics per group!!
...
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
# Split the data by year and apply summary() to each group
summary_by_year <- summary(split(finches_raw$beak_depth_mm, finches_raw$year))
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
# Split the data by year and apply summary() to each group
# Ensure that both 'beak_depth_mm' and 'year' are vectors, and then apply split
summary_by_year <- summary(split(finches_raw$beak_depth_mm, finches_raw$year))
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
# Split the data by year and apply summary() to each group
summary_by_year <- summary(split(finches_raw$Depth, finches_raw$Year))
print(summary_by_year)
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
summary(finches_raw)# summary statistics per group??
...
#| label: preliminaries
glimpse(finches_raw) # quick glimpse of data
summary(finches_raw)# summary statistics per group??
#| label: cleaning-data
# Cleaning data pipe
finches_clean <- finches_raw %>%
mutate( #Convert 'Year' to a factor with levels 1976 and 1978
Year = factor(Year, levels = c(1976, 1978))
) %>%
rename( #Rename columns for clarity
year = Year,
bird_id = X,
beak_depth_mm = Depth
)
glimpse(finches_clean) # check relevant changes to structure and names
# Save the clean data
write_csv(finches_clean, here("data", "finches_clean.csv"))
#| label: exploratory-boxplot
# Source the plotting functions
source(here::here("functions", "plotting.R"))
#Defining color scheme for each year
year_colour <- c(
"1976" = "#E7B800", # Blue for 1976 (before the drought)
"1978" = "#FC4E07")  # Orange for 1978 (after the drought)
# Call the plotting function
exploratory_boxplot <- plot_exploratory_boxplot (
data = finches_clean,       # Dataset
x_col = "year",             # Grouping column for x-axis
y_col = "beak_depth_mm",    # Response variable for y-axis
color_map = year_colour,    # Color mapping
x_label = "Year",           # Label for x-axis
y_label = "Beak Depth (mm)" # Label for y-axis
)
print(exploratory_boxplot) # Print the boxplot
#| label: t-test
# Relevel the 'year' variable to ensure 1978 is the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1978")
# Run the t-test between 1976 and 1978 for beak depth
t_test_result <- t.test(beak_depth_mm ~ factor(year), data = finches_clean)
print(t_test)
#| label: t-test
# Relevel the 'year' variable to ensure 1978 is the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1978")
# Run the t-test between 1976 and 1978 for beak depth
t_test_result <- t.test(beak_depth_mm ~ factor(year), data = finches_clean)
print(t_test_result)
#| label: diagnostic-plots
# Extract group means
mean_1976 <- mean(finches_clean$beak_depth_mm[finches_clean$year == "1976"])
mean_1978 <- mean(finches_clean$beak_depth_mm[finches_clean$year == "1978"])
# Calculate residuals manually by subtracting the group mean from each observation
residuals <- ifelse(finches_clean$year == "1976", finches_clean$beak_depth_mm - mean_1976,
finches_clean$beak_depth_mm - mean_1978)
# Now we can use these residuals for diagnostic plots
fitted_values <- ifelse(finches_clean$year == "1976", mean_1976, mean_1978)  # Fitted values are the group means
# 1. Residuals vs Fitted Plot (Heteroscedasticity Check)
resid_vs_fitted <- ggplot(data = data.frame(fitted = fitted_values, residuals = residuals),
aes(x = fitted, y = residuals)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = 0, color = "red") +
labs(x = "Fitted Values", y = "Residuals", title = "Residuals vs Fitted") +
theme_minimal()
# 2. Normal Q-Q Plot (Normality Check)
qq_plot <- ggplot(data = data.frame(residuals = residuals), aes(sample = residuals)) +
geom_qq() +
geom_qq_line(color = "red") +
labs(title = "Normal Q-Q Plot") +
theme_minimal()
# Arrange the plots into a multi-panel figure
grid.arrange(resid_vs_fitted, qq_plot, nrow = 1 )
# Levene's test for equality of variances
levene_test <- leveneTest(beak_depth_mm ~ year, data = finches_clean)
install.packages("car")
install.packages("car")
library(car)
library(car)
# Levene's test for equality of variances
levene_test <- leveneTest(beak_depth_mm ~ year, data = finches_clean)
print(levene_test)
# Source the plotting functions
source(here::here("functions", "plotting.R"))
# Defining color scheme for each year
year_colour <- c(
"1976" = "#E7B800", # Yellow for 1976 (before the drought)
"1978" = "#FC4E07"  # Orange for 1978 (after the drought)
)
# Call the plotting function
result_boxplot <- plot_boxplot_t.test(
data = finches_clean,       # Dataset
x_col = "year",             # Grouping column for x-axis
y_col = "beak_depth_mm",    # Response variable for y-axis
color_map = year_colour,    # Color mapping
x_label = "Year",           # Label for x-axis
y_label = "Beak Depth (mm)" # Label for y-axis
)
# Print the result
print(result_boxplot)  # This will display the plot with the p-value annotation
# Relevel year to make 1976 the reference level
finches_clean$year <- relevel(finches_clean$year, ref = "1976")
# Fit the linear model (using factor(year) as a predictor)
lm_beak <- lm(beak_depth_mm ~ factor(year), data = finches_clean)
# Load the necessary library for the coefficient plot
library(dotwhisker)
# Create the coefficient plot
dwplot(lm_beak) +
theme_classic() +
labs(
title = "Difference in Beak Depth Between 1976 and 1978",
x = "Mean Difference in Beak Depth (mm)",
caption = "95% Confidence Interval"
) +
scale_y_discrete(labels = element_blank()) +  # Remove y-axis labels
theme(
axis.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank(),  # Remove y-axis title
axis.text.y = element_blank(),   # Remove y-axis text
axis.ticks.y = element_blank(),  # Remove y-axis ticks
legend.position = "none",        # Remove legend
panel.border = element_blank()   # Remove the vertical line (panel border)
) +
scale_x_continuous(
limits = c(0, 1),  # Adjust x-axis range to start from 0
breaks = seq(0, 1, by = 0.2)  # Adjust x-axis breaks for better spacing
)
renv::snapshot() #run when all the packages are loaded
renv::snapshot() #run when all the packages are loaded
renv::restore()
